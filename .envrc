#!/bin/sh

if command -v poetry >/dev/null; then

    touch .poetry.lock.md5 # create an empty file if it doesn't exist to protect the following command

    if command -v md5sum >/dev/null; then
        md5sum=md5sum
    else
        md5sum="md5 -r"
    fi

    # hash `poetry.lock` and compare it to the last time dependencies were installed
    MD5_LAST="$(cut -d' ' -f1 <.poetry.lock.md5)"
    MD5_CURRENT="$($md5sum poetry.lock | cut -d' ' -f1)"

    if [ "$MD5_LAST" != "$MD5_CURRENT" ]; then
        printf 'ðŸš€ Detected changes in \033[0;36mpoetry.lock\033[0m; installing dependencies\n'
        poetry install && echo "$MD5_CURRENT" >.poetry.lock.md5

        # display environment info
        poetry env info
    fi

    # shellcheck disable=SC1091
    test -f "$(poetry env info -p)/bin/activate" && . "$(poetry env info -p)/bin/activate"

    # shellcheck disable=SC2154
    test -z "${PRE_COMMIT_DISABLED}" && command -v pre-commit >/dev/null && pre-commit install --install-hooks
fi


version="$(poetry version --short)"
export SENTRY_RELEASE_VERSION="$version"

branch_slug="$(git branch --show-current | tr -d '\n' | tr -c '[:alnum:]' '-')"
export CI_COMMIT_REF_SLUG="$branch_slug"

commit="$(git --no-pager rev-parse --short=8 HEAD)"
export CI_COMMIT_SHORT_SHA="$commit"

build_url="$(id -un)@$(hostname)"
export CI_JOB_URL="$build_url"

export NOTHING_VERSION_TAG="$CI_COMMIT_SHORT_SHA"
export NOTHING_BRANCH_TAG="$CI_COMMIT_REF_SLUG"

# âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯âŽ¯
# export the environment variables into the current shell
write_env_script() {
    # Write the variables defined in the given 'dotenv' file to a source-able script for export.
    dotenv_file="$1"
    output_file="$2"

    grep -vE "^#" "$dotenv_file" |   # strip comment lines
        grep -oE "^.{1,}=[^#]{1,}" | # filter to only lines with an '=', stripping EOL comments
        sed "s/[\`'\"]//g" |         # remove any quotes or backticks
        while read -r line; do
            var_name="${line%=*}"
            var_value="${line#*=}"

            # surround each value in quotes
            printf '%s="%s"\n' "${var_name}" "${var_value}" >>"$output_file"
        done
}

test -f .env || cp ./etc/base.env .env

# shellcheck disable=SC1091
test -f .env &&
    write_env_script .env tmp.env &&
    set -o allexport &&
    . ./tmp.env &&
    set +o allexport &&
    rm tmp.env
